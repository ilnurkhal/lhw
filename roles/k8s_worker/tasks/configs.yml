---
- name: Download kubectl
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/v{{ kubectl_version }}/bin/linux/amd64/kubectl
    dest: /usr/local/bin/
    mode: '0751'
    
- name: Generate The kubelet Kubernetes Configuration File
  when: groups['k8s_worker'] is defined and inventory_hostname in groups['k8s_worker']
  shell: "{{ item }}"
  with_items: 
  - kubectl config set-cluster {{ cluster_name }} --certificate-authority={{cert_dir}}/ca.pem --embed-certs=true --server=https://127.0.0.1:6443 --kubeconfig={{ inventory_hostname_short }}.kubeconfig
  - kubectl config set-credentials system:node:{{ inventory_hostname_short }} --client-certificate={{cert_dir}}/{{ inventory_hostname_short }}.pem --client-key={{cert_dir}}/{{ inventory_hostname_short }}-key.pem --embed-certs=true --kubeconfig={{ inventory_hostname_short }}.kubeconfig
  - kubectl config set-context default --cluster={{ cluster_name }} --user=system:node:{{ inventory_hostname_short }} --kubeconfig={{ inventory_hostname_short }}.kubeconfig
  - kubectl config use-context default --kubeconfig={{ inventory_hostname_short }}.kubeconfig     

- name: Generate The kube-proxy Kubernetes Configuration File
  when: groups['k8s_worker'] is defined and inventory_hostname in groups['k8s_worker']
  shell: "{{ item }}"
  with_items:
  - kubectl config set-cluster {{ cluster_name }} --certificate-authority={{cert_dir}}/ca.pem --embed-certs=true --server=https://127.0.0.1:6443 --kubeconfig=kube-proxy.kubeconfig
  - kubectl config set-credentials system:kube-proxy --client-certificate={{cert_dir}}/kube-proxy.pem --client-key={{cert_dir}}/kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig
  - kubectl config set-context default --cluster={{ cluster_name }} --user=system:kube-proxy --kubeconfig=kube-proxy.kubeconfig
  - kubectl config use-context default --kubeconfig=kube-proxy.kubeconfig
...